name: Build and Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build and Package Spring CRM
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version-generator.outputs.version }}

    env:
      OCTOPUS_URL: ${{ vars.OCTOPUS_SERVER_URL }}
      OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
      OCTOPUS_SPACE: ${{ vars.OCTOPUS_SERVER_SPACE }}  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Set the build version number
      - name: Set Version number
        id: version-generator
        run: echo "version=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
      
      # Setup build to use Java
      - name: Set up JDK11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          
      # Install Octopus action
      - name: Install Octopus CLI
        uses: OctopusDeploy/install-octopus-cli-action@v1.1.1
        with:
          version: latest

      # Create artifacts folder
      - name: Create artifacts folder
        run: mkdir "$GITHUB_WORKSPACE/artifacts"

      # Build Spring CRM using maven
      - name: Build Spring CRM
        run: |
          mvn clean package -Dproject.versionNumber=${{ steps.version-generator.outputs.version }} -DdatabaseServerName=${{ vars.DATABASE_SERVER_NAME }} -DdatabaseName=${{ vars.DATABASE_NAME }} -DskipTests -DdatabaseUserName=${{ vars.DATABASE_USER_NAME }} -DdatabaseUserPassword=${{ vars.DATABASE_USER_PASSWORD }}
          cp "$GITHUB_WORKSPACE/target/springcrm.web.${{ steps.version-generator.outputs.version }}.war" "$GITHUB_WORKSPACE/artifacts/springcrm.web.${{ steps.version-generator.outputs.version }}.war"
 
      - name: Package database scripts for Octopus üêô
        uses: OctopusDeploy/create-zip-package-action@v3
        with:
          package_id: 'springcrm.db'
          version: ${{ steps.version-generator.outputs.version }}
          output_folder: artifacts
          base_path: flyway
          files: |
            **/*.*

      - name: Push packages to Octopus üêô
        uses: OctopusDeploy/push-package-action@v3
        with:  
          packages: |
            artifacts/springcrm.web.${{ steps.version-generator.outputs.version }}.war
            artifacts/springcrm.db.${{ steps.version-generator.outputs.version }}.zip

  Create-Octopus-Release:
      name: Create Octopus Release üêô
      needs: [build]
      runs-on: ubuntu-latest
      
      env:
        OCTOPUS_URL: ${{ vars.OCTOPUS_SERVER_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_SPACE: ${{ vars.OCTOPUS_SERVER_SPACE }}
        
      steps:
      - uses: OctopusDeploy/create-release-action@v3
        id: "create-release"
        with:
          project: "Spring CRM"
          git_ref: "refs/heads/main"
      outputs: 
       release_number: ${{ steps.create-release.outputs.release_number }}
